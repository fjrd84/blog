---
layout: post
title:  "CMD Magic"
date:   2018-07-04
category: command-line
backgrounds:
    - ../assets/images/backgrounds/matrix.jpg
#    - https://blog.jdonado.com/assets/images/backgrounds/reasonml.png
#thumb: https://blog.jdonado.com/assets/images/reasonml.jpg
thumb: ../assets/images/terminal.jpg
tags: linux command-line shell macosx
---

# Command Line Magic

Last year I published [Vim Magic]({% link _posts/2017-05-28-vim-magic.markdown %}), where I gathered all the commands that I fond particularly useful when using the Vim editor. I've kept updating it ever since whenever I've found new useful tricks. It's been so far helpful to me as a reference and hopefully to somebodyelse out there too. This post is the same but for the command line in Linux/Unix.

This is not intended to be a tutorial with the basics for you to learn how to use the command line. Instead, it's more like a reference for somebody that's been using the terminal for some time now and wants to learn some new tricks or remember older ones.

## What is the Command Line?

{% highlight bash %}
{% endhighlight %}

## Scripts

- `#!/bin/bash` use this as the first line of a bash script, for the interpreter to know how to handle it

## Files

- `for i in *.png ; do convert "$i" "${i%.*}.jpg" ; done` convert all **png** files into **jpg**
- `find /path/to/files* -mtime +5 -exec rm {} \;` delete files older than X days
- `find . -name  '*.zip' -exec unzip {} \;` unzip all the zip files in the current directory

## Users and Groups

- `cat /etc/passwd | cut -d: -f1` list all users
- `cat /etc/group | cut -d: -f1` list all groups
- `chown user file` change the owner of a file
- `chgrp group file` change the group of a file
- `chown user:group file` change the owner and group of a file


## Dependencies

- `sudo apt-get install build-essential checkinstall` in debian-based distros, install the essentials for building packages (make; make install)

## Networking

- `lsof -nP | grep 9092` show which process is blocking the port 9092

## Random Magic

- `<ctrl>+r` reverse search: in order to search for a command you previously used
- `cal` print the current month
- `wdiff one.txt two.txt | colordiff` color the differences between **one.txt** and **two.txt**
- `openssl base64 -in input.txt -out encoded.b64` encode **input.txt** in base64 and save it to the file **encoded.b64**
- `cat oldfile.txt | tr -d '\n' > newfile.txt` create newfile.txt as a copy of oldfile where all newlines have been removed
- `SOME_FILE=$(<some-file.txt)` load the contents of **some-file.txt** into the variable **SOME_FILE**
- `convert file.{jpg,png}` equivalent to `convert file.jpg file.png`
- `sudo !!` run the last command with sudo
- ` `+any command: it won't go to the history
- `$( command )` it gives the output of command
- `rsync -avz --remove-source-files -e ssh /local/dir remoteuser@remotehost:/remote/dir` SSH copy files and remove source
- `ssh user@personal-server.com -L 2000:25` SSH session and port tunneling
- `service --status-all` status of services


